name: Create Nuget

on:
  release:
    types: [published]
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: windows-2019

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Fetch all tags
      run: git fetch --tags

    - name: Get latest tag
      id: get_latest_tag
      run: echo "::set-output name=tag::$(git describe --tags $(git rev-list --tags --max-count=1))"

    - name: Determine version
      id: determine_version
      shell: bash
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "::set-output name=version::${{ github.event.release.tag_name }}"
        else
          echo "::set-output name=version::${{ steps.get_latest_tag.outputs.tag }}"
        fi

    - name: Restore NuGet packages
      run: nuget restore ./Source/Winforms.DependencyInjection/WinformsHost/WinformsHost.csproj

    - name: Build project
      run: msbuild ./Source/Winforms.DependencyInjection/WinformsHost/WinformsHost.csproj /p:Configuration=Release

    - name: Create Nuget Package
      run: nuget pack ./Source/Winforms.DependencyInjection/WinformsHost/WinformsHost.csproj -Properties Configuration=Release -Version ${{ steps.determine_version.outputs.version }} -OutputDirectory ./Source/Winforms.DependencyInjection/WinformsHost/bin/Release

    - name: Archive Nuget Package
      uses: actions/upload-artifact@v1
      with:
        name: WinformsHost
        path: ./Source/Winforms.DependencyInjection/WinformsHost/bin/Release/*.nupkg

    - name: Publish Nuget Package
      run: nuget push ./Source/Winforms.DependencyInjection/WinformsHost/bin/Release/*.nupkg -ApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json
